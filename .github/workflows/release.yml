name: 'Release package'

# Limit how many instances of this workflow a pull request
# can run at once.
# Upon commit, if a instance is in progress for the same
# pull request, cancel it. The latest workflow is
# the priority.
concurrency:
  group: main-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  # Run for changes to the main branch
  push:
    branches:
      - main

  # Manually trigger the workflow from the "Actions"
  # tab in the GitHub repo.
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 19
          registry-url: 'https://npm.pkg.github.com'
          scope: '@edwardjosephbennett'

      ### Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0 # Use the version that matches your project

      ### Cache pnpm store
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            **/node_modules
          key: "${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            "${{ runner.os }}-pnpm-"

      - name: Install dependencies
        run: pnpm install

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Setup Git config
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git config --global --add url."git@github.com:".insteadOf "https://github.com/"

      ### Release the package
      ### We run the nx release command but skip publishing, so that we can generate the required Changelogs etc
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm nx release --projects=jh-code-standards --skip-publish

      ### Push the changes back to the repo
      ### We need to amend the commit message to include the release tag
      ### This is so that the release tag is included in the commit message
      - name: Push changes
        run: |
          git config user.name 'GitHub Action'
          git config user.email 'action@github.com'
          git log
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
